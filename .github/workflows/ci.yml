name: CI
on:
  pull_request:
  workflow_call:

jobs:
  code-style:
    name: Code style
    if: ${{ false }}
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/rene-bos/iw-ghdw-php:8.1-ci-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: composer install --no-interaction --optimize-autoloader

      - name: Setup problem matcher for phpcs
        run: echo "::add-matcher::.github/matchers/phpcs-problem-matcher.json"

      - name: Check code style
        run: composer run-script phpcs -- --report=emacs

  php-compatibility:
    name: PHP compatibility
    if: ${{ false }}
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/rene-bos/iw-ghdw-php:8.1-ci-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: composer install --no-interaction --optimize-autoloader

      - name: Setup problem matcher for phpcs
        run: echo "::add-matcher::.github/matchers/phpcs-problem-matcher.json"
        
      - name: Check PHP compatibility
        run: composer run-script phpcompatibility -- --report=emacs

  static-code-analysis:
    name: Static code analysis
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/rene-bos/iw-ghdw-php:8.1-ci-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: composer install --no-interaction --optimize-autoloader

      - name: Run static code analysis
        run: composer run-script phpstan

  unit-tests:
    name: Unit tests
    if: ${{ false }}
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/rene-bos/iw-ghdw-php:8.1-ci-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: composer install --no-interaction --optimize-autoloader

      - name: Setup problem matcher for PHPUnit
        run: echo "::add-matcher::.github/matchers/phpunit-problem-matcher.json"

      - name: Execute unit tests
        run: composer run-script phpunit

  # This dummy job is required because the `passes-all-required-checks` job needs at least one dependent job.
  # This job may be removed when we have at least one real check.
  successful-dummy:
    name: Successful dummy
    runs-on: ubuntu-20.04
    steps:
      - name: Step which always succeeds
        run: echo "I am a dummy step which always succeeds"

  all-green:
    name: All green
    if: always()
    needs:
#      - code-style
#      - php-compatibility
#      - static-code-analysis
#      - unit-tests
      - successful-dummy
    runs-on: ubuntu-latest
    steps:
    - name: Decide whether the needed jobs succeeded or failed
      uses: re-actors/alls-green@6887e756cc4560fe4dc2a4aca7be0190e62d241e
      with:
        jobs: ${{ toJSON(needs) }}
